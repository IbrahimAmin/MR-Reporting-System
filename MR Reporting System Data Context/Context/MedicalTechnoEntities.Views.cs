//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(MR_Reporting_System_Data_Context.Context.MedicalTechnoEntities),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets39d78f921dc0e6d8e52866d02acea63b440a3ff2e4d42a964d2142817493c244))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework Power Tools", "0.9.0.0")]
    internal sealed class ViewsForBaseEntitySets39d78f921dc0e6d8e52866d02acea63b440a3ff2e4d42a964d2142817493c244 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "39d78f921dc0e6d8e52866d02acea63b440a3ff2e4d42a964d2142817493c244"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "MedicalTechnoModelStoreContainer.AgentAreas")
            {
                return GetView0();
            }

            if (extentName == "MedicalTechnoModelStoreContainer.AgentDistributers")
            {
                return GetView1();
            }

            if (extentName == "MedicalTechnoModelStoreContainer.AgentDrugs")
            {
                return GetView2();
            }

            if (extentName == "MedicalTechnoModelStoreContainer.AgentHospitals")
            {
                return GetView3();
            }

            if (extentName == "MedicalTechnoModelStoreContainer.AgentPharmacies")
            {
                return GetView4();
            }

            if (extentName == "MedicalTechnoModelStoreContainer.Agents")
            {
                return GetView5();
            }

            if (extentName == "MedicalTechnoModelStoreContainer.Areas")
            {
                return GetView6();
            }

            if (extentName == "MedicalTechnoModelStoreContainer.Companies")
            {
                return GetView7();
            }

            if (extentName == "MedicalTechnoModelStoreContainer.DefaultLists")
            {
                return GetView8();
            }

            if (extentName == "MedicalTechnoModelStoreContainer.Distributers")
            {
                return GetView9();
            }

            if (extentName == "MedicalTechnoModelStoreContainer.Docotors")
            {
                return GetView10();
            }

            if (extentName == "MedicalTechnoModelStoreContainer.Drugs")
            {
                return GetView11();
            }

            if (extentName == "MedicalTechnoModelStoreContainer.GroupPermissions")
            {
                return GetView12();
            }

            if (extentName == "MedicalTechnoModelStoreContainer.Groups")
            {
                return GetView13();
            }

            if (extentName == "MedicalTechnoModelStoreContainer.Hospitals")
            {
                return GetView14();
            }

            if (extentName == "MedicalTechnoModelStoreContainer.Locations")
            {
                return GetView15();
            }

            if (extentName == "MedicalTechnoModelStoreContainer.Orders")
            {
                return GetView16();
            }

            if (extentName == "MedicalTechnoModelStoreContainer.ordersItems")
            {
                return GetView17();
            }

            if (extentName == "MedicalTechnoModelStoreContainer.Pharmacies")
            {
                return GetView18();
            }

            if (extentName == "MedicalTechnoModelStoreContainer.Visits")
            {
                return GetView19();
            }

            if (extentName == "Entities.AgentAreas")
            {
                return GetView20();
            }

            if (extentName == "Entities.AgentDistributers")
            {
                return GetView21();
            }

            if (extentName == "Entities.AgentDrugs")
            {
                return GetView22();
            }

            if (extentName == "Entities.AgentHospitals")
            {
                return GetView23();
            }

            if (extentName == "Entities.AgentPharmacies")
            {
                return GetView24();
            }

            if (extentName == "Entities.Agents")
            {
                return GetView25();
            }

            if (extentName == "Entities.Areas")
            {
                return GetView26();
            }

            if (extentName == "Entities.Companies")
            {
                return GetView27();
            }

            if (extentName == "Entities.DefaultLists")
            {
                return GetView28();
            }

            if (extentName == "Entities.Distributers")
            {
                return GetView29();
            }

            if (extentName == "Entities.Docotors")
            {
                return GetView30();
            }

            if (extentName == "Entities.Drugs")
            {
                return GetView31();
            }

            if (extentName == "Entities.GroupPermissions")
            {
                return GetView32();
            }

            if (extentName == "Entities.Groups")
            {
                return GetView33();
            }

            if (extentName == "Entities.Hospitals")
            {
                return GetView34();
            }

            if (extentName == "Entities.Locations")
            {
                return GetView35();
            }

            if (extentName == "Entities.Orders")
            {
                return GetView36();
            }

            if (extentName == "Entities.ordersItems")
            {
                return GetView37();
            }

            if (extentName == "Entities.Pharmacies")
            {
                return GetView38();
            }

            if (extentName == "Entities.Visits")
            {
                return GetView39();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for MedicalTechnoModelStoreContainer.AgentAreas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AgentAreas
        [MedicalTechnoModel.Store.AgentAreas](T1.AgentAreas_Id, T1.AgentAreas_AgentId, T1.AgentAreas_AreaId)
    FROM (
        SELECT 
            T.Id AS AgentAreas_Id, 
            T.AgentId AS AgentAreas_AgentId, 
            T.AreaId AS AgentAreas_AreaId, 
            True AS _from0
        FROM Entities.AgentAreas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MedicalTechnoModelStoreContainer.AgentDistributers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AgentDistributers
        [MedicalTechnoModel.Store.AgentDistributers](T1.AgentDistributers_Id, T1.AgentDistributers_AgentId, T1.AgentDistributers_DistributerId)
    FROM (
        SELECT 
            T.Id AS AgentDistributers_Id, 
            T.AgentId AS AgentDistributers_AgentId, 
            T.DistributerId AS AgentDistributers_DistributerId, 
            True AS _from0
        FROM Entities.AgentDistributers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MedicalTechnoModelStoreContainer.AgentDrugs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AgentDrugs
        [MedicalTechnoModel.Store.AgentDrugs](T1.AgentDrugs_Id, T1.AgentDrugs_AgentId, T1.AgentDrugs_DrugsId)
    FROM (
        SELECT 
            T.Id AS AgentDrugs_Id, 
            T.AgentId AS AgentDrugs_AgentId, 
            T.DrugsId AS AgentDrugs_DrugsId, 
            True AS _from0
        FROM Entities.AgentDrugs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MedicalTechnoModelStoreContainer.AgentHospitals.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AgentHospitals
        [MedicalTechnoModel.Store.AgentHospitals](T1.AgentHospitals_Id, T1.AgentHospitals_AgentId, T1.AgentHospitals_HospitalId)
    FROM (
        SELECT 
            T.Id AS AgentHospitals_Id, 
            T.AgentId AS AgentHospitals_AgentId, 
            T.HospitalId AS AgentHospitals_HospitalId, 
            True AS _from0
        FROM Entities.AgentHospitals AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MedicalTechnoModelStoreContainer.AgentPharmacies.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AgentPharmacies
        [MedicalTechnoModel.Store.AgentPharmacies](T1.AgentPharmacies_Id, T1.AgentPharmacies_AgentId, T1.AgentPharmacies_PharmacyId)
    FROM (
        SELECT 
            T.Id AS AgentPharmacies_Id, 
            T.AgentId AS AgentPharmacies_AgentId, 
            T.PharmacyId AS AgentPharmacies_PharmacyId, 
            True AS _from0
        FROM Entities.AgentPharmacies AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MedicalTechnoModelStoreContainer.Agents.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Agents
        [MedicalTechnoModel.Store.Agents](T1.Agents_id, T1.Agents_UserName, T1.Agents_PassWord, T1.Agents_ContactName, T1.Agents_PostionId, T1.Agents_AreaId, T1.Agents_Address, T1.Agents_Phone, T1.Agents_Email, T1.Agents_GroupId, T1.Agents_Salary, T1.Agents_NoOfVisits, T1.Agents_SupervisorId, T1.Agents_Code, T1.Agents_UserType)
    FROM (
        SELECT 
            T.id AS Agents_id, 
            T.UserName AS Agents_UserName, 
            T.PassWord AS Agents_PassWord, 
            T.ContactName AS Agents_ContactName, 
            T.PostionId AS Agents_PostionId, 
            T.AreaId AS Agents_AreaId, 
            T.Address AS Agents_Address, 
            T.Phone AS Agents_Phone, 
            T.Email AS Agents_Email, 
            T.GroupId AS Agents_GroupId, 
            T.Salary AS Agents_Salary, 
            T.NoOfVisits AS Agents_NoOfVisits, 
            T.SupervisorId AS Agents_SupervisorId, 
            T.Code AS Agents_Code, 
            T.UserType AS Agents_UserType, 
            True AS _from0
        FROM Entities.Agents AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MedicalTechnoModelStoreContainer.Areas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Areas
        [MedicalTechnoModel.Store.Areas](T1.Areas_Id, T1.Areas_LocationId, T1.Areas_Title, T1.Areas_DeletedBy)
    FROM (
        SELECT 
            T.Id AS Areas_Id, 
            T.LocationId AS Areas_LocationId, 
            T.Title AS Areas_Title, 
            T.DeletedBy AS Areas_DeletedBy, 
            True AS _from0
        FROM Entities.Areas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MedicalTechnoModelStoreContainer.Companies.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Companies
        [MedicalTechnoModel.Store.Companies](T1.Companies_Id, T1.Companies_Name, T1.Companies_Description, T1.Companies_Phone, T1.Companies_Email, T1.Companies_Notes, T1.Companies_code)
    FROM (
        SELECT 
            T.Id AS Companies_Id, 
            T.Name AS Companies_Name, 
            T.Description AS Companies_Description, 
            T.Phone AS Companies_Phone, 
            T.Email AS Companies_Email, 
            T.Notes AS Companies_Notes, 
            T.code AS Companies_code, 
            True AS _from0
        FROM Entities.Companies AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MedicalTechnoModelStoreContainer.DefaultLists.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DefaultLists
        [MedicalTechnoModel.Store.DefaultLists](T1.DefaultLists_Id, T1.DefaultLists_Title, T1.DefaultLists_Type, T1.DefaultLists_Action)
    FROM (
        SELECT 
            T.Id AS DefaultLists_Id, 
            T.Title AS DefaultLists_Title, 
            T.Type AS DefaultLists_Type, 
            T.Action AS DefaultLists_Action, 
            True AS _from0
        FROM Entities.DefaultLists AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MedicalTechnoModelStoreContainer.Distributers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Distributers
        [MedicalTechnoModel.Store.Distributers](T1.Distributers_Id, T1.Distributers_Name, T1.Distributers_AreaId, T1.Distributers_Address, T1.Distributers_Phone, T1.Distributers_Code, T1.Distributers_NoOfVisits, T1.Distributers_DeletedBy)
    FROM (
        SELECT 
            T.Id AS Distributers_Id, 
            T.Name AS Distributers_Name, 
            T.AreaId AS Distributers_AreaId, 
            T.Address AS Distributers_Address, 
            T.Phone AS Distributers_Phone, 
            T.Code AS Distributers_Code, 
            T.NoOfVisits AS Distributers_NoOfVisits, 
            T.DeletedBy AS Distributers_DeletedBy, 
            True AS _from0
        FROM Entities.Distributers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MedicalTechnoModelStoreContainer.Docotors.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Docotors
        [MedicalTechnoModel.Store.Docotors](T1.Docotors_Id, T1.Docotors_Name, T1.Docotors_SpecializeId, T1.Docotors_IsMorning, T1.Docotors_Address, T1.Docotors_AreaId, T1.Docotors_ClassTypeId, T1.Docotors_NoOfVisits, T1.Docotors_Phone, T1.Docotors_Telephone, T1.Docotors_Email, T1.Docotors_Code, T1.Docotors_DeletedBy)
    FROM (
        SELECT 
            T.Id AS Docotors_Id, 
            T.Name AS Docotors_Name, 
            T.SpecializeId AS Docotors_SpecializeId, 
            T.IsMorning AS Docotors_IsMorning, 
            T.Address AS Docotors_Address, 
            T.AreaId AS Docotors_AreaId, 
            T.ClassTypeId AS Docotors_ClassTypeId, 
            T.NoOfVisits AS Docotors_NoOfVisits, 
            T.Phone AS Docotors_Phone, 
            T.Telephone AS Docotors_Telephone, 
            T.Email AS Docotors_Email, 
            T.Code AS Docotors_Code, 
            T.DeletedBy AS Docotors_DeletedBy, 
            True AS _from0
        FROM Entities.Docotors AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MedicalTechnoModelStoreContainer.Drugs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Drugs
        [MedicalTechnoModel.Store.Drugs](T1.Drugs_Id, T1.Drugs_Name, T1.Drugs_Description, T1.Drugs_Code, T1.Drugs_Price, T1.Drugs_SectionId, T1.Drugs_Notes, T1.Drugs_CompanyId, T1.Drugs_DeletedBy)
    FROM (
        SELECT 
            T.Id AS Drugs_Id, 
            T.Name AS Drugs_Name, 
            T.Description AS Drugs_Description, 
            T.Code AS Drugs_Code, 
            T.Price AS Drugs_Price, 
            T.SectionId AS Drugs_SectionId, 
            T.Notes AS Drugs_Notes, 
            T.CompanyId AS Drugs_CompanyId, 
            T.DeletedBy AS Drugs_DeletedBy, 
            True AS _from0
        FROM Entities.Drugs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MedicalTechnoModelStoreContainer.GroupPermissions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GroupPermissions
        [MedicalTechnoModel.Store.GroupPermissions](T1.GroupPermissions_Id, T1.GroupPermissions_GroupId, T1.GroupPermissions_PermissionCode, T1.GroupPermissions_Value)
    FROM (
        SELECT 
            T.Id AS GroupPermissions_Id, 
            T.GroupId AS GroupPermissions_GroupId, 
            T.PermissionCode AS GroupPermissions_PermissionCode, 
            T.[Value] AS GroupPermissions_Value, 
            True AS _from0
        FROM Entities.GroupPermissions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MedicalTechnoModelStoreContainer.Groups.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Groups
        [MedicalTechnoModel.Store.Groups](T1.Groups_Id, T1.Groups_GroupName)
    FROM (
        SELECT 
            T.Id AS Groups_Id, 
            T.GroupName AS Groups_GroupName, 
            True AS _from0
        FROM Entities.Groups AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MedicalTechnoModelStoreContainer.Hospitals.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Hospitals
        [MedicalTechnoModel.Store.Hospitals](T1.Hospitals_Id, T1.Hospitals_Name, T1.Hospitals_AreaId, T1.Hospitals_Address, T1.Hospitals_Phone, T1.Hospitals_Email, T1.Hospitals_Type, T1.Hospitals_Code, T1.Hospitals_DeletedBy)
    FROM (
        SELECT 
            T.Id AS Hospitals_Id, 
            T.Name AS Hospitals_Name, 
            T.AreaId AS Hospitals_AreaId, 
            T.Address AS Hospitals_Address, 
            T.Phone AS Hospitals_Phone, 
            T.Email AS Hospitals_Email, 
            T.Type AS Hospitals_Type, 
            T.Code AS Hospitals_Code, 
            T.DeletedBy AS Hospitals_DeletedBy, 
            True AS _from0
        FROM Entities.Hospitals AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MedicalTechnoModelStoreContainer.Locations.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Locations
        [MedicalTechnoModel.Store.Locations](T1.Locations_Id, T1.Locations_Title, T1.Locations_DeletedBy)
    FROM (
        SELECT 
            T.Id AS Locations_Id, 
            T.Title AS Locations_Title, 
            T.DeletedBy AS Locations_DeletedBy, 
            True AS _from0
        FROM Entities.Locations AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MedicalTechnoModelStoreContainer.Orders.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView16()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Orders
        [MedicalTechnoModel.Store.Orders](T1.Orders_id, T1.Orders_orderTo, T1.Orders_orderTypeId, T1.Orders_agentId, T1.Orders_subject, T1.Orders_orderDate, T1.Orders_estimateDate, T1.Orders_deliverdDate, T1.Orders_supervisorApprove, T1.Orders_isDeliverd, T1.Orders_supervisorDate, T1.Orders_noOfItems, T1.Orders_total, T1.Orders_netTotal, T1.Orders_lastEditBy, T1.Orders_lastEditDate, T1.Orders_deletedBy)
    FROM (
        SELECT 
            T.id AS Orders_id, 
            T.orderTo AS Orders_orderTo, 
            T.orderTypeId AS Orders_orderTypeId, 
            T.agentId AS Orders_agentId, 
            T.subject AS Orders_subject, 
            T.orderDate AS Orders_orderDate, 
            T.estimateDate AS Orders_estimateDate, 
            T.deliverdDate AS Orders_deliverdDate, 
            T.supervisorApprove AS Orders_supervisorApprove, 
            T.isDeliverd AS Orders_isDeliverd, 
            T.supervisorDate AS Orders_supervisorDate, 
            T.noOfItems AS Orders_noOfItems, 
            T.total AS Orders_total, 
            T.netTotal AS Orders_netTotal, 
            T.lastEditBy AS Orders_lastEditBy, 
            T.lastEditDate AS Orders_lastEditDate, 
            T.deletedBy AS Orders_deletedBy, 
            True AS _from0
        FROM Entities.Orders AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MedicalTechnoModelStoreContainer.ordersItems.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView17()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ordersItems
        [MedicalTechnoModel.Store.ordersItems](T1.ordersItems_id, T1.ordersItems_description, T1.ordersItems_itemCode, T1.ordersItems_unitPrice, T1.ordersItems_quantity, T1.ordersItems_total, T1.ordersItems_drugsId, T1.ordersItems_orderId)
    FROM (
        SELECT 
            T.id AS ordersItems_id, 
            T.description AS ordersItems_description, 
            T.itemCode AS ordersItems_itemCode, 
            T.unitPrice AS ordersItems_unitPrice, 
            T.quantity AS ordersItems_quantity, 
            T.total AS ordersItems_total, 
            T.drugsId AS ordersItems_drugsId, 
            T.orderId AS ordersItems_orderId, 
            True AS _from0
        FROM Entities.ordersItems AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MedicalTechnoModelStoreContainer.Pharmacies.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView18()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Pharmacies
        [MedicalTechnoModel.Store.Pharmacies](T1.Pharmacies_Id, T1.Pharmacies_Name, T1.Pharmacies_AreaId, T1.Pharmacies_Address, T1.Pharmacies_Phone, T1.Pharmacies_Email, T1.Pharmacies_OwnerName, T1.Pharmacies_OwnerPhone, T1.Pharmacies_code)
    FROM (
        SELECT 
            T.Id AS Pharmacies_Id, 
            T.Name AS Pharmacies_Name, 
            T.AreaId AS Pharmacies_AreaId, 
            T.Address AS Pharmacies_Address, 
            T.Phone AS Pharmacies_Phone, 
            T.Email AS Pharmacies_Email, 
            T.OwnerName AS Pharmacies_OwnerName, 
            T.OwnerPhone AS Pharmacies_OwnerPhone, 
            T.code AS Pharmacies_code, 
            True AS _from0
        FROM Entities.Pharmacies AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for MedicalTechnoModelStoreContainer.Visits.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView19()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Visits
        [MedicalTechnoModel.Store.Visits](T1.Visits_Id, T1.Visits_AgentId, T1.Visits_DrugsId, T1.Visits_TypeId, T1.Visits_VisitTo, T1.Visits_VisitDate, T1.Visits_Duration, T1.Visits_Description, T1.Visits_IsMorning, T1.Visits_Notes, T1.Visits_LastEditBy, T1.Visits_LastEditDate, T1.Visits_CreationDate)
    FROM (
        SELECT 
            T.Id AS Visits_Id, 
            T.AgentId AS Visits_AgentId, 
            T.DrugsId AS Visits_DrugsId, 
            T.TypeId AS Visits_TypeId, 
            T.VisitTo AS Visits_VisitTo, 
            T.VisitDate AS Visits_VisitDate, 
            T.Duration AS Visits_Duration, 
            T.Description AS Visits_Description, 
            T.IsMorning AS Visits_IsMorning, 
            T.Notes AS Visits_Notes, 
            T.LastEditBy AS Visits_LastEditBy, 
            T.LastEditDate AS Visits_LastEditDate, 
            T.CreationDate AS Visits_CreationDate, 
            True AS _from0
        FROM Entities.Visits AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.AgentAreas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView20()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AgentAreas
        [MedicalTechnoModel.AgentAreas](T1.AgentAreas_Id, T1.AgentAreas_AgentId, T1.AgentAreas_AreaId)
    FROM (
        SELECT 
            T.Id AS AgentAreas_Id, 
            T.AgentId AS AgentAreas_AgentId, 
            T.AreaId AS AgentAreas_AreaId, 
            True AS _from0
        FROM MedicalTechnoModelStoreContainer.AgentAreas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.AgentDistributers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView21()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AgentDistributers
        [MedicalTechnoModel.AgentDistributers](T1.AgentDistributers_Id, T1.AgentDistributers_AgentId, T1.AgentDistributers_DistributerId)
    FROM (
        SELECT 
            T.Id AS AgentDistributers_Id, 
            T.AgentId AS AgentDistributers_AgentId, 
            T.DistributerId AS AgentDistributers_DistributerId, 
            True AS _from0
        FROM MedicalTechnoModelStoreContainer.AgentDistributers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.AgentDrugs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView22()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AgentDrugs
        [MedicalTechnoModel.AgentDrugs](T1.AgentDrugs_Id, T1.AgentDrugs_AgentId, T1.AgentDrugs_DrugsId)
    FROM (
        SELECT 
            T.Id AS AgentDrugs_Id, 
            T.AgentId AS AgentDrugs_AgentId, 
            T.DrugsId AS AgentDrugs_DrugsId, 
            True AS _from0
        FROM MedicalTechnoModelStoreContainer.AgentDrugs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.AgentHospitals.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView23()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AgentHospitals
        [MedicalTechnoModel.AgentHospitals](T1.AgentHospitals_Id, T1.AgentHospitals_AgentId, T1.AgentHospitals_HospitalId)
    FROM (
        SELECT 
            T.Id AS AgentHospitals_Id, 
            T.AgentId AS AgentHospitals_AgentId, 
            T.HospitalId AS AgentHospitals_HospitalId, 
            True AS _from0
        FROM MedicalTechnoModelStoreContainer.AgentHospitals AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.AgentPharmacies.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView24()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AgentPharmacies
        [MedicalTechnoModel.AgentPharmacies](T1.AgentPharmacies_Id, T1.AgentPharmacies_AgentId, T1.AgentPharmacies_PharmacyId)
    FROM (
        SELECT 
            T.Id AS AgentPharmacies_Id, 
            T.AgentId AS AgentPharmacies_AgentId, 
            T.PharmacyId AS AgentPharmacies_PharmacyId, 
            True AS _from0
        FROM MedicalTechnoModelStoreContainer.AgentPharmacies AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.Agents.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView25()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Agents
        [MedicalTechnoModel.Agents](T1.Agents_id, T1.Agents_UserName, T1.Agents_PassWord, T1.Agents_ContactName, T1.Agents_PostionId, T1.Agents_AreaId, T1.Agents_Address, T1.Agents_Phone, T1.Agents_Email, T1.Agents_GroupId, T1.Agents_Salary, T1.Agents_NoOfVisits, T1.Agents_SupervisorId, T1.Agents_Code, T1.Agents_UserType)
    FROM (
        SELECT 
            T.id AS Agents_id, 
            T.UserName AS Agents_UserName, 
            T.PassWord AS Agents_PassWord, 
            T.ContactName AS Agents_ContactName, 
            T.PostionId AS Agents_PostionId, 
            T.AreaId AS Agents_AreaId, 
            T.Address AS Agents_Address, 
            T.Phone AS Agents_Phone, 
            T.Email AS Agents_Email, 
            T.GroupId AS Agents_GroupId, 
            T.Salary AS Agents_Salary, 
            T.NoOfVisits AS Agents_NoOfVisits, 
            T.SupervisorId AS Agents_SupervisorId, 
            T.Code AS Agents_Code, 
            T.UserType AS Agents_UserType, 
            True AS _from0
        FROM MedicalTechnoModelStoreContainer.Agents AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.Areas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView26()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Areas
        [MedicalTechnoModel.Areas](T1.Areas_Id, T1.Areas_LocationId, T1.Areas_Title, T1.Areas_DeletedBy)
    FROM (
        SELECT 
            T.Id AS Areas_Id, 
            T.LocationId AS Areas_LocationId, 
            T.Title AS Areas_Title, 
            T.DeletedBy AS Areas_DeletedBy, 
            True AS _from0
        FROM MedicalTechnoModelStoreContainer.Areas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.Companies.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView27()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Companies
        [MedicalTechnoModel.Companies](T1.Companies_Id, T1.Companies_Name, T1.Companies_Description, T1.Companies_Phone, T1.Companies_Email, T1.Companies_Notes, T1.Companies_code)
    FROM (
        SELECT 
            T.Id AS Companies_Id, 
            T.Name AS Companies_Name, 
            T.Description AS Companies_Description, 
            T.Phone AS Companies_Phone, 
            T.Email AS Companies_Email, 
            T.Notes AS Companies_Notes, 
            T.code AS Companies_code, 
            True AS _from0
        FROM MedicalTechnoModelStoreContainer.Companies AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.DefaultLists.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView28()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DefaultLists
        [MedicalTechnoModel.DefaultLists](T1.DefaultLists_Id, T1.DefaultLists_Title, T1.DefaultLists_Type, T1.DefaultLists_Action)
    FROM (
        SELECT 
            T.Id AS DefaultLists_Id, 
            T.Title AS DefaultLists_Title, 
            T.Type AS DefaultLists_Type, 
            T.Action AS DefaultLists_Action, 
            True AS _from0
        FROM MedicalTechnoModelStoreContainer.DefaultLists AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.Distributers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView29()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Distributers
        [MedicalTechnoModel.Distributers](T1.Distributers_Id, T1.Distributers_Name, T1.Distributers_AreaId, T1.Distributers_Address, T1.Distributers_Phone, T1.Distributers_Code, T1.Distributers_NoOfVisits, T1.Distributers_DeletedBy)
    FROM (
        SELECT 
            T.Id AS Distributers_Id, 
            T.Name AS Distributers_Name, 
            T.AreaId AS Distributers_AreaId, 
            T.Address AS Distributers_Address, 
            T.Phone AS Distributers_Phone, 
            T.Code AS Distributers_Code, 
            T.NoOfVisits AS Distributers_NoOfVisits, 
            T.DeletedBy AS Distributers_DeletedBy, 
            True AS _from0
        FROM MedicalTechnoModelStoreContainer.Distributers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.Docotors.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView30()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Docotors
        [MedicalTechnoModel.Docotors](T1.Docotors_Id, T1.Docotors_Name, T1.Docotors_SpecializeId, T1.Docotors_IsMorning, T1.Docotors_Address, T1.Docotors_AreaId, T1.Docotors_ClassTypeId, T1.Docotors_NoOfVisits, T1.Docotors_Phone, T1.Docotors_Telephone, T1.Docotors_Email, T1.Docotors_Code, T1.Docotors_DeletedBy)
    FROM (
        SELECT 
            T.Id AS Docotors_Id, 
            T.Name AS Docotors_Name, 
            T.SpecializeId AS Docotors_SpecializeId, 
            T.IsMorning AS Docotors_IsMorning, 
            T.Address AS Docotors_Address, 
            T.AreaId AS Docotors_AreaId, 
            T.ClassTypeId AS Docotors_ClassTypeId, 
            T.NoOfVisits AS Docotors_NoOfVisits, 
            T.Phone AS Docotors_Phone, 
            T.Telephone AS Docotors_Telephone, 
            T.Email AS Docotors_Email, 
            T.Code AS Docotors_Code, 
            T.DeletedBy AS Docotors_DeletedBy, 
            True AS _from0
        FROM MedicalTechnoModelStoreContainer.Docotors AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.Drugs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView31()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Drugs
        [MedicalTechnoModel.Drugs](T1.Drugs_Id, T1.Drugs_Name, T1.Drugs_Description, T1.Drugs_Code, T1.Drugs_Price, T1.Drugs_SectionId, T1.Drugs_Notes, T1.Drugs_CompanyId, T1.Drugs_DeletedBy)
    FROM (
        SELECT 
            T.Id AS Drugs_Id, 
            T.Name AS Drugs_Name, 
            T.Description AS Drugs_Description, 
            T.Code AS Drugs_Code, 
            T.Price AS Drugs_Price, 
            T.SectionId AS Drugs_SectionId, 
            T.Notes AS Drugs_Notes, 
            T.CompanyId AS Drugs_CompanyId, 
            T.DeletedBy AS Drugs_DeletedBy, 
            True AS _from0
        FROM MedicalTechnoModelStoreContainer.Drugs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.GroupPermissions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView32()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing GroupPermissions
        [MedicalTechnoModel.GroupPermissions](T1.GroupPermissions_Id, T1.GroupPermissions_GroupId, T1.GroupPermissions_PermissionCode, T1.GroupPermissions_Value)
    FROM (
        SELECT 
            T.Id AS GroupPermissions_Id, 
            T.GroupId AS GroupPermissions_GroupId, 
            T.PermissionCode AS GroupPermissions_PermissionCode, 
            T.[Value] AS GroupPermissions_Value, 
            True AS _from0
        FROM MedicalTechnoModelStoreContainer.GroupPermissions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.Groups.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView33()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Groups
        [MedicalTechnoModel.Groups](T1.Groups_Id, T1.Groups_GroupName)
    FROM (
        SELECT 
            T.Id AS Groups_Id, 
            T.GroupName AS Groups_GroupName, 
            True AS _from0
        FROM MedicalTechnoModelStoreContainer.Groups AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.Hospitals.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView34()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Hospitals
        [MedicalTechnoModel.Hospitals](T1.Hospitals_Id, T1.Hospitals_Name, T1.Hospitals_AreaId, T1.Hospitals_Address, T1.Hospitals_Phone, T1.Hospitals_Email, T1.Hospitals_Type, T1.Hospitals_Code, T1.Hospitals_DeletedBy)
    FROM (
        SELECT 
            T.Id AS Hospitals_Id, 
            T.Name AS Hospitals_Name, 
            T.AreaId AS Hospitals_AreaId, 
            T.Address AS Hospitals_Address, 
            T.Phone AS Hospitals_Phone, 
            T.Email AS Hospitals_Email, 
            T.Type AS Hospitals_Type, 
            T.Code AS Hospitals_Code, 
            T.DeletedBy AS Hospitals_DeletedBy, 
            True AS _from0
        FROM MedicalTechnoModelStoreContainer.Hospitals AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.Locations.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView35()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Locations
        [MedicalTechnoModel.Locations](T1.Locations_Id, T1.Locations_Title, T1.Locations_DeletedBy)
    FROM (
        SELECT 
            T.Id AS Locations_Id, 
            T.Title AS Locations_Title, 
            T.DeletedBy AS Locations_DeletedBy, 
            True AS _from0
        FROM MedicalTechnoModelStoreContainer.Locations AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.Orders.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView36()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Orders
        [MedicalTechnoModel.Orders](T1.Orders_id, T1.Orders_orderTo, T1.Orders_orderTypeId, T1.Orders_agentId, T1.Orders_subject, T1.Orders_orderDate, T1.Orders_estimateDate, T1.Orders_deliverdDate, T1.Orders_supervisorApprove, T1.Orders_isDeliverd, T1.Orders_supervisorDate, T1.Orders_noOfItems, T1.Orders_total, T1.Orders_netTotal, T1.Orders_lastEditBy, T1.Orders_lastEditDate, T1.Orders_deletedBy)
    FROM (
        SELECT 
            T.id AS Orders_id, 
            T.orderTo AS Orders_orderTo, 
            T.orderTypeId AS Orders_orderTypeId, 
            T.agentId AS Orders_agentId, 
            T.subject AS Orders_subject, 
            T.orderDate AS Orders_orderDate, 
            T.estimateDate AS Orders_estimateDate, 
            T.deliverdDate AS Orders_deliverdDate, 
            T.supervisorApprove AS Orders_supervisorApprove, 
            T.isDeliverd AS Orders_isDeliverd, 
            T.supervisorDate AS Orders_supervisorDate, 
            T.noOfItems AS Orders_noOfItems, 
            T.total AS Orders_total, 
            T.netTotal AS Orders_netTotal, 
            T.lastEditBy AS Orders_lastEditBy, 
            T.lastEditDate AS Orders_lastEditDate, 
            T.deletedBy AS Orders_deletedBy, 
            True AS _from0
        FROM MedicalTechnoModelStoreContainer.Orders AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.ordersItems.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView37()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ordersItems
        [MedicalTechnoModel.ordersItems](T1.ordersItems_id, T1.ordersItems_description, T1.ordersItems_itemCode, T1.ordersItems_unitPrice, T1.ordersItems_quantity, T1.ordersItems_total, T1.ordersItems_drugsId, T1.ordersItems_orderId)
    FROM (
        SELECT 
            T.id AS ordersItems_id, 
            T.description AS ordersItems_description, 
            T.itemCode AS ordersItems_itemCode, 
            T.unitPrice AS ordersItems_unitPrice, 
            T.quantity AS ordersItems_quantity, 
            T.total AS ordersItems_total, 
            T.drugsId AS ordersItems_drugsId, 
            T.orderId AS ordersItems_orderId, 
            True AS _from0
        FROM MedicalTechnoModelStoreContainer.ordersItems AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.Pharmacies.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView38()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Pharmacies
        [MedicalTechnoModel.Pharmacies](T1.Pharmacies_Id, T1.Pharmacies_Name, T1.Pharmacies_AreaId, T1.Pharmacies_Address, T1.Pharmacies_Phone, T1.Pharmacies_Email, T1.Pharmacies_OwnerName, T1.Pharmacies_OwnerPhone, T1.Pharmacies_code)
    FROM (
        SELECT 
            T.Id AS Pharmacies_Id, 
            T.Name AS Pharmacies_Name, 
            T.AreaId AS Pharmacies_AreaId, 
            T.Address AS Pharmacies_Address, 
            T.Phone AS Pharmacies_Phone, 
            T.Email AS Pharmacies_Email, 
            T.OwnerName AS Pharmacies_OwnerName, 
            T.OwnerPhone AS Pharmacies_OwnerPhone, 
            T.code AS Pharmacies_code, 
            True AS _from0
        FROM MedicalTechnoModelStoreContainer.Pharmacies AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Entities.Visits.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView39()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Visits
        [MedicalTechnoModel.Visits](T1.Visits_Id, T1.Visits_AgentId, T1.Visits_DrugsId, T1.Visits_TypeId, T1.Visits_VisitTo, T1.Visits_VisitDate, T1.Visits_Duration, T1.Visits_Description, T1.Visits_IsMorning, T1.Visits_Notes, T1.Visits_LastEditBy, T1.Visits_LastEditDate, T1.Visits_CreationDate)
    FROM (
        SELECT 
            T.Id AS Visits_Id, 
            T.AgentId AS Visits_AgentId, 
            T.DrugsId AS Visits_DrugsId, 
            T.TypeId AS Visits_TypeId, 
            T.VisitTo AS Visits_VisitTo, 
            T.VisitDate AS Visits_VisitDate, 
            T.Duration AS Visits_Duration, 
            T.Description AS Visits_Description, 
            T.IsMorning AS Visits_IsMorning, 
            T.Notes AS Visits_Notes, 
            T.LastEditBy AS Visits_LastEditBy, 
            T.LastEditDate AS Visits_LastEditDate, 
            T.CreationDate AS Visits_CreationDate, 
            True AS _from0
        FROM MedicalTechnoModelStoreContainer.Visits AS T
    ) AS T1");
        }
    }
}
